import { Abi } from "viem";

export const cnMarketAbi = [
	{
		inputs: [
			{ internalType: "address", name: "_tweetVerifier", type: "address" },
			{ internalType: "address", name: "_embeddingVerifier", type: "address" },
		],
		stateMutability: "nonpayable",
		type: "constructor",
	},
	{ inputs: [], name: "InsufficientMarketBalance", type: "error" },
	{ inputs: [], name: "InsufficientValue", type: "error" },
	{ inputs: [], name: "InvalidTweetId", type: "error" },
	{ inputs: [], name: "MarketAlreadyExists", type: "error" },
	{ inputs: [], name: "MarketAlreadyResolved", type: "error" },
	{ inputs: [], name: "MarketClosed", type: "error" },
	{ inputs: [], name: "MarketNotEnded", type: "error" },
	{ inputs: [], name: "MarketNotResolved", type: "error" },
	{ inputs: [], name: "MarketNotTracked", type: "error" },
	{ inputs: [], name: "NotThePredictor", type: "error" },
	{ inputs: [], name: "PredictionAlreadyClaimed", type: "error" },
	{ inputs: [], name: "PredictionFailed", type: "error" },
	{ inputs: [], name: "Unauthorized", type: "error" },
	{ inputs: [], name: "VerificationFailed", type: "error" },
	{
		anonymous: false,
		inputs: [
			{
				indexed: false,
				internalType: "string",
				name: "message",
				type: "string",
			},
			{ indexed: false, internalType: "int256", name: "value", type: "int256" },
		],
		name: "DebugLogInt",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: false,
				internalType: "string",
				name: "message",
				type: "string",
			},
			{ indexed: false, internalType: "string", name: "value", type: "string" },
		],
		name: "DebugLogString",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: "uint256",
				name: "marketId",
				type: "uint256",
			},
			{
				indexed: false,
				internalType: "bytes32",
				name: "proofHash",
				type: "bytes32",
			},
		],
		name: "EmbeddingVerificationCalled",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: false,
				internalType: "int256",
				name: "wadFeeFraction",
				type: "int256",
			},
		],
		name: "FeeUpdated",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: "uint256",
				name: "marketId",
				type: "uint256",
			},
			{
				indexed: false,
				internalType: "string",
				name: "context",
				type: "string",
			},
			{ indexed: false, internalType: "bytes", name: "data", type: "bytes" },
		],
		name: "LogBytes",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: "uint256",
				name: "marketId",
				type: "uint256",
			},
			{
				indexed: false,
				internalType: "string",
				name: "context",
				type: "string",
			},
			{
				indexed: false,
				internalType: "int256[]",
				name: "embedding",
				type: "int256[]",
			},
		],
		name: "LogEmbedding",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: "uint256",
				name: "marketId",
				type: "uint256",
			},
			{
				indexed: true,
				internalType: "address",
				name: "creator",
				type: "address",
			},
			{
				indexed: false,
				internalType: "string",
				name: "tweetId",
				type: "string",
			},
			{
				indexed: false,
				internalType: "uint256",
				name: "creationTime",
				type: "uint256",
			},
			{
				indexed: false,
				internalType: "uint256",
				name: "deadline",
				type: "uint256",
			},
		],
		name: "MarketCreated",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: "uint256",
				name: "marketId",
				type: "uint256",
			},
			{ indexed: false, internalType: "bool", name: "hasNote", type: "bool" },
			{
				indexed: false,
				internalType: "string",
				name: "noteText",
				type: "string",
			},
			{
				indexed: false,
				internalType: "uint256",
				name: "revealTimestamp",
				type: "uint256",
			},
		],
		name: "MarketResolved",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: "uint256",
				name: "marketId",
				type: "uint256",
			},
			{
				indexed: true,
				internalType: "uint256",
				name: "predictionId",
				type: "uint256",
			},
			{
				indexed: true,
				internalType: "address",
				name: "predictor",
				type: "address",
			},
			{
				indexed: false,
				internalType: "uint256",
				name: "payout",
				type: "uint256",
			},
			{ indexed: false, internalType: "uint256", name: "fee", type: "uint256" },
		],
		name: "PredictionClaimed",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: "uint256",
				name: "marketId",
				type: "uint256",
			},
			{
				indexed: true,
				internalType: "uint256",
				name: "predictionId",
				type: "uint256",
			},
			{
				indexed: false,
				internalType: "address",
				name: "predictor",
				type: "address",
			},
			{ indexed: false, internalType: "bool", name: "isAgree", type: "bool" },
			{
				indexed: false,
				internalType: "uint256",
				name: "value",
				type: "uint256",
			},
			{
				indexed: false,
				internalType: "uint256",
				name: "timestamp",
				type: "uint256",
			},
		],
		name: "PredictionMade",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: "address",
				name: "newResolverAddress",
				type: "address",
			},
		],
		name: "ResolverUpdated",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: "uint256",
				name: "marketId",
				type: "uint256",
			},
			{
				indexed: false,
				internalType: "bytes32",
				name: "proofHash",
				type: "bytes32",
			},
		],
		name: "TweetVerificationCalled",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: "address",
				name: "verifier",
				type: "address",
			},
			{
				indexed: false,
				internalType: "bool",
				name: "isTweetVerifier",
				type: "bool",
			},
		],
		name: "VerifierUpdated",
		type: "event",
	},
	{
		inputs: [],
		name: "MARKET_DURATION",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "MIN_VALUE",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "WAD_EARLY_BONUS_MAX",
		outputs: [{ internalType: "int256", name: "", type: "int256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "WAD_FEE_FRACTION",
		outputs: [{ internalType: "int256", name: "", type: "int256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [{ internalType: "uint256", name: "amount", type: "uint256" }],
		name: "claimFees",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint256", name: "marketId", type: "uint256" },
			{ internalType: "uint256", name: "predictionId", type: "uint256" },
		],
		name: "claimRewards",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "string", name: "tweetId", type: "string" }],
		name: "createMarket",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [],
		name: "embeddingVerifier",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "", type: "address" }],
		name: "fees",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [{ internalType: "uint256", name: "marketId", type: "uint256" }],
		name: "finalizeScores",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "uint256", name: "marketId", type: "uint256" }],
		name: "getMarket",
		outputs: [
			{
				components: [
					{ internalType: "address", name: "creator", type: "address" },
					{ internalType: "string", name: "tweetId", type: "string" },
					{ internalType: "enum MarketStatus", name: "status", type: "uint8" },
					{ internalType: "uint256", name: "deadline", type: "uint256" },
					{ internalType: "uint256", name: "minValue", type: "uint256" },
					{ internalType: "int256", name: "wadFeeFraction", type: "int256" },
					{ internalType: "address", name: "feeRecipient", type: "address" },
					{ internalType: "uint256", name: "tweetTimestamp", type: "uint256" },
				],
				internalType: "struct MarketConfig",
				name: "",
				type: "tuple",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [{ internalType: "uint256", name: "marketId", type: "uint256" }],
		name: "getOutcome",
		outputs: [
			{
				components: [
					{ internalType: "bool", name: "hasNote", type: "bool" },
					{ internalType: "string", name: "noteText", type: "string" },
					{ internalType: "bytes", name: "noteEmbedding", type: "bytes" },
					{ internalType: "uint256", name: "revealTimestamp", type: "uint256" },
				],
				internalType: "struct Outcome",
				name: "",
				type: "tuple",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint256", name: "marketId", type: "uint256" },
			{ internalType: "uint256", name: "predictionId", type: "uint256" },
		],
		name: "getPrediction",
		outputs: [
			{
				components: [
					{ internalType: "uint256", name: "value", type: "uint256" },
					{ internalType: "address", name: "predictor", type: "address" },
					{ internalType: "bool", name: "isAgree", type: "bool" },
					{ internalType: "uint256", name: "timestamp", type: "uint256" },
					{ internalType: "bool", name: "claimed", type: "bool" },
				],
				internalType: "struct Prediction",
				name: "",
				type: "tuple",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [{ internalType: "uint256", name: "marketId", type: "uint256" }],
		name: "getPredictionRatio",
		outputs: [{ internalType: "int256", name: "", type: "int256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [{ internalType: "uint256", name: "marketId", type: "uint256" }],
		name: "getPredictionTracker",
		outputs: [
			{
				components: [
					{
						internalType: "uint256",
						name: "nextPredictionId",
						type: "uint256",
					},
					{ internalType: "uint256", name: "totalAgreeValue", type: "uint256" },
					{
						internalType: "uint256",
						name: "totalDisagreeValue",
						type: "uint256",
					},
					{
						internalType: "uint256",
						name: "totalValueClaimed",
						type: "uint256",
					},
					{ internalType: "uint256", name: "numPredictions", type: "uint256" },
				],
				internalType: "struct PredictionTracker",
				name: "",
				type: "tuple",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "getResolver",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [{ internalType: "uint256", name: "marketId", type: "uint256" }],
		name: "getTotalMarketValue",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		name: "markets",
		outputs: [
			{ internalType: "address", name: "creator", type: "address" },
			{ internalType: "string", name: "tweetId", type: "string" },
			{ internalType: "enum MarketStatus", name: "status", type: "uint8" },
			{ internalType: "uint256", name: "deadline", type: "uint256" },
			{ internalType: "uint256", name: "minValue", type: "uint256" },
			{ internalType: "int256", name: "wadFeeFraction", type: "int256" },
			{ internalType: "address", name: "feeRecipient", type: "address" },
			{ internalType: "uint256", name: "tweetTimestamp", type: "uint256" },
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		name: "outcomes",
		outputs: [
			{ internalType: "bool", name: "hasNote", type: "bool" },
			{ internalType: "string", name: "noteText", type: "string" },
			{ internalType: "bytes", name: "noteEmbedding", type: "bytes" },
			{ internalType: "uint256", name: "revealTimestamp", type: "uint256" },
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "owner",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint256", name: "marketId", type: "uint256" },
			{ internalType: "bool", name: "isAgree", type: "bool" },
			{ internalType: "string", name: "reasonText", type: "string" },
			{ internalType: "bytes", name: "reasonEmbedding", type: "bytes" },
		],
		name: "predict",
		outputs: [],
		stateMutability: "payable",
		type: "function",
	},
	{
		inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		name: "predictionTrackers",
		outputs: [
			{ internalType: "uint256", name: "nextPredictionId", type: "uint256" },
			{ internalType: "uint256", name: "totalAgreeValue", type: "uint256" },
			{ internalType: "uint256", name: "totalDisagreeValue", type: "uint256" },
			{ internalType: "uint256", name: "totalValueClaimed", type: "uint256" },
			{ internalType: "uint256", name: "numPredictions", type: "uint256" },
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint256", name: "", type: "uint256" },
			{ internalType: "uint256", name: "", type: "uint256" },
		],
		name: "predictions",
		outputs: [
			{ internalType: "uint256", name: "value", type: "uint256" },
			{ internalType: "address", name: "predictor", type: "address" },
			{ internalType: "bool", name: "isAgree", type: "bool" },
			{ internalType: "uint256", name: "timestamp", type: "uint256" },
			{ internalType: "bool", name: "claimed", type: "bool" },
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint256", name: "marketId", type: "uint256" },
			{ internalType: "bool", name: "hasNote", type: "bool" },
			{ internalType: "string", name: "noteText", type: "string" },
			{ internalType: "bytes", name: "noteEmbeddingBytes", type: "bytes" },
			{
				components: [
					{
						components: [
							{ internalType: "string", name: "provider", type: "string" },
							{ internalType: "string", name: "parameters", type: "string" },
							{ internalType: "string", name: "context", type: "string" },
						],
						internalType: "struct Claims.ClaimInfo",
						name: "claimInfo",
						type: "tuple",
					},
					{
						components: [
							{
								components: [
									{
										internalType: "bytes32",
										name: "identifier",
										type: "bytes32",
									},
									{ internalType: "address", name: "owner", type: "address" },
									{
										internalType: "uint32",
										name: "timestampS",
										type: "uint32",
									},
									{ internalType: "uint32", name: "epoch", type: "uint32" },
								],
								internalType: "struct Claims.CompleteClaimData",
								name: "claim",
								type: "tuple",
							},
							{ internalType: "bytes[]", name: "signatures", type: "bytes[]" },
						],
						internalType: "struct Claims.SignedClaim",
						name: "signedClaim",
						type: "tuple",
					},
				],
				internalType: "struct Reclaim.Proof",
				name: "noteProof",
				type: "tuple",
			},
			{
				components: [
					{
						components: [
							{ internalType: "string", name: "provider", type: "string" },
							{ internalType: "string", name: "parameters", type: "string" },
							{ internalType: "string", name: "context", type: "string" },
						],
						internalType: "struct Claims.ClaimInfo",
						name: "claimInfo",
						type: "tuple",
					},
					{
						components: [
							{
								components: [
									{
										internalType: "bytes32",
										name: "identifier",
										type: "bytes32",
									},
									{ internalType: "address", name: "owner", type: "address" },
									{
										internalType: "uint32",
										name: "timestampS",
										type: "uint32",
									},
									{ internalType: "uint32", name: "epoch", type: "uint32" },
								],
								internalType: "struct Claims.CompleteClaimData",
								name: "claim",
								type: "tuple",
							},
							{ internalType: "bytes[]", name: "signatures", type: "bytes[]" },
						],
						internalType: "struct Claims.SignedClaim",
						name: "signedClaim",
						type: "tuple",
					},
				],
				internalType: "struct Reclaim.Proof",
				name: "embeddingProof",
				type: "tuple",
			},
		],
		name: "resolve",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "uint256", name: "marketId", type: "uint256" }],
		name: "resolveWithoutNote",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [],
		name: "resolverAddress",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "_embeddingVerifier", type: "address" },
		],
		name: "setEmbeddingVerifier",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "int256", name: "_wadFeeFraction", type: "int256" },
		],
		name: "setFeeFraction",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "_resolver", type: "address" }],
		name: "setResolver",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "_tweetVerifier", type: "address" },
		],
		name: "setTweetVerifier",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		name: "totalWeightedAgreeScores",
		outputs: [{ internalType: "int256", name: "", type: "int256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [{ internalType: "string", name: "", type: "string" }],
		name: "tweetIdToMarketId",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "tweetVerifier",
		outputs: [{ internalType: "address", name: "", type: "address" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "uint256", name: "", type: "uint256" },
			{ internalType: "uint256", name: "", type: "uint256" },
		],
		name: "weightedAgreeScores",
		outputs: [{ internalType: "int256", name: "", type: "int256" }],
		stateMutability: "view",
		type: "function",
	},
] as Abi;
